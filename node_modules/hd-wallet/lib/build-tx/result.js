"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNonfinalResult = getNonfinalResult;
exports.getFinalResult = getFinalResult;
exports.empty = void 0;

var mtransaction = _interopRequireWildcard(require("./transaction"));

var coinselect = _interopRequireWildcard(require("./coinselect"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var empty = {
  type: 'error',
  error: 'EMPTY'
};
exports.empty = empty;

function getNonfinalResult(result) {
  var _result$result = result.result,
      max = _result$result.max,
      fee = _result$result.fee,
      feePerByte = _result$result.feePerByte,
      bytes = _result$result.bytes,
      totalSpent = _result$result.totalSpent;
  return {
    type: 'nonfinal',
    fee: fee,
    feePerByte: feePerByte,
    bytes: bytes,
    max: max,
    totalSpent: totalSpent
  };
}

function getFinalResult(result, transaction) {
  var _result$result2 = result.result,
      max = _result$result2.max,
      fee = _result$result2.fee,
      feePerByte = _result$result2.feePerByte,
      bytes = _result$result2.bytes,
      totalSpent = _result$result2.totalSpent;
  return {
    type: 'final',
    fee: fee,
    feePerByte: feePerByte,
    bytes: bytes,
    transaction: transaction,
    max: max,
    totalSpent: totalSpent
  };
}
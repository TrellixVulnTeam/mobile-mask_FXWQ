"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parsers = void 0;
const parser_babel_1 = require("prettier/parser-babel");
exports.parsers = {
    'json': Object.assign(Object.assign({}, parser_babel_1.parsers.json), { preprocess(text, options) {
            let preprocessedText = text;
            /* istanbul ignore next */
            if (parser_babel_1.parsers.json.preprocess) {
                preprocessedText = parser_babel_1.parsers.json.preprocess(text, options);
            }
            let json;
            try {
                json = JSON.parse(preprocessedText);
            }
            catch (_) {
                // skip invalid JSON; this is best handled by the regular JSON parser
                return text;
            }
            // Only objects are intended to be sorted by this plugin
            if (json === null || typeof json !== 'object' || Array.isArray(json)) {
                return text;
            }
            const sortedJson = {};
            for (const key of Object.keys(json).sort()) {
                sortedJson[key] = json[key];
            }
            return JSON.stringify(sortedJson, null, 2);
        } }),
};
//# sourceMappingURL=index.js.map
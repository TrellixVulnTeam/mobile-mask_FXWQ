import { Release, VersionArray } from './parse';
export declare const filterSafeListByBootloader: (releasesList: Release[], bootloaderVersion: VersionArray) => ({
    required: boolean;
    url: string;
    fingerprint: string;
    changelog: string;
    min_bridge_version: [number, number, number];
    version: [1, number, number] | [2, number, number];
    min_firmware_version: [1, number, number] | [2, number, number];
    min_bootloader_version: [1, number, number] | [2, number, number];
} & {
    bootloader_version?: [1, number, number] | [2, number, number] | undefined;
    url_bitcoinonly?: string | undefined;
    fingerprint_bitcoinonly?: string | undefined;
    notes?: string | undefined;
    rollout?: number | undefined;
    channel?: string | undefined;
})[];
export declare const filterSafeListByFirmware: (releasesList: Release[], firmwareVersion: VersionArray) => ({
    required: boolean;
    url: string;
    fingerprint: string;
    changelog: string;
    min_bridge_version: [number, number, number];
    version: [1, number, number] | [2, number, number];
    min_firmware_version: [1, number, number] | [2, number, number];
    min_bootloader_version: [1, number, number] | [2, number, number];
} & {
    bootloader_version?: [1, number, number] | [2, number, number] | undefined;
    url_bitcoinonly?: string | undefined;
    fingerprint_bitcoinonly?: string | undefined;
    notes?: string | undefined;
    rollout?: number | undefined;
    channel?: string | undefined;
})[];
